openapi: 3.0.0
info:
  title: WRKSHT API documentation
  version: '1.0'
  description: WRKSHT API
paths:
  /api/users:
    get:
      summary: Your GET endpoint
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Not Found
      operationId: get-users
      description: Get all users
    parameters: []
    post:
      summary: ''
      tags:
        - user
      operationId: create-user
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Not Found
      description: Create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationDTO'
  /api/auth/login:
    post:
      summary: ''
      tags:
        - auth
      operationId: login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
        '401':
          description: Unauthorized
        '500':
          description: Created
      description: Login to the application with username and password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDTO'
      parameters: []
  '/api/auth/passwordset/{userId}':
    put:
      summary: ''
      tags:
        - auth
      operationId: set-password-for-user
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Setting password for user by admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeDTO'
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
  /api/auth/token:
    post:
      summary: ''
      tags:
        - auth
      operationId: get-access-token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokensDTO'
        '400':
          description: Not Implemented
        '500':
          description: Internal Server Error
      description: Get access token with refresh token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenDTO'
  /api/auth/me/changepassword:
    post:
      summary: ''
      tags:
        - auth
      operationId: change-password
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Change own password by user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeDTO'
  /api/auth/roles:
    get:
      summary: Your GET endpoint
      tags:
        - auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Not Found
      operationId: get-roles
      description: Get roles which are in application
  /api/users/me:
    get:
      summary: Your GET endpoint
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: get-me
      description: Get current user profile
    put:
      summary: ''
      tags:
        - user
      operationId: update-me
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      description: Update current user profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateDTO'
    delete:
      summary: ''
      tags:
        - user
      operationId: delete-me
      responses:
        '204':
          description: Non-Authoritative Information
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      description: Delete current user profile
  '/api/users/{userId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-user-by-id
      description: Get user by id
    put:
      summary: ''
      tags:
        - user
      operationId: update-user-by-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Update user by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateDTO'
    delete:
      summary: ''
      tags:
        - user
      operationId: delete-user-by-id
      responses:
        '204':
          description: Payment Required
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Delete user by id
  '/api/user/{userId}/makeadmin':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    put:
      summary: ''
      tags:
        - user
      operationId: make-user-admin
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Make user admin by id
components:
  schemas:
    PasswordChangeDTO:
      title: PasswordChangeDTO
      type: object
      properties:
        newPassword:
          type: string
        currentPassword:
          type: string
      required:
        - newPassword
    LoginRequestDTO:
      title: LoginRequestDTO
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    LoginResponseDTO:
      title: LoginResponseDTO
      type: object
      properties:
        tokens:
          $ref: '#/components/schemas/TokensDTO'
        user:
          $ref: '#/components/schemas/UserDTO'
    TokensDTO:
      title: TokensDTO
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    UserDTO:
      title: UserDTO
      type: object
      properties:
        id:
          type: string
    RefreshTokenDTO:
      title: RefreshTokenDTO
      type: object
      properties:
        refreshToken:
          type: string
    UserRegistrationDTO:
      title: UserRegistrationDTO
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        userName:
          type: string
        password:
          type: string
          pattern: '.*(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d].*'
          maxLength: 64
          minLength: 8
        role:
          type: string
          enum:
            - ADMIN
            - WORKER
      required:
        - firstName
        - lastName
        - userName
        - password
        - role
    UserUpdateDTO:
      title: UserUpdateDTO
      type: object
      properties:
        firstname:
          type: string
        lastName:
          type: string
        userName:
          type: string
