openapi: 3.0.0
info:
  title: WRKSHT API documentation
  version: '1.0'
  description: WRKSHT API
paths:
  /api/users:
    get:
      summary: Your GET endpoint
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Not Found
      operationId: get-users
      description: Get all users
    parameters: []
    post:
      summary: ''
      tags:
        - user
      operationId: create-user
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Not Found
      description: Create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationDTO'
  /api/auth/login:
    post:
      summary: ''
      tags:
        - auth
      operationId: login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
        '401':
          description: Unauthorized
        '500':
          description: Created
      description: Login to the application with username and password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDTO'
      parameters: []
  '/api/auth/passwordset/{userId}':
    put:
      summary: ''
      tags:
        - auth
      operationId: set-password-for-user
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Setting password for user by admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeDTO'
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
  /api/auth/token:
    post:
      summary: ''
      tags:
        - auth
      operationId: get-access-token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokensDTO'
        '400':
          description: Not Implemented
        '500':
          description: Internal Server Error
      description: Get access token with refresh token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenDTO'
  /api/auth/me/changepassword:
    post:
      summary: ''
      tags:
        - auth
      operationId: change-password
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Change own password by user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeDTO'
  /api/auth/roles:
    get:
      summary: Your GET endpoint
      tags:
        - auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Not Found
      operationId: get-roles
      description: Get roles which are in application
  /api/users/me:
    get:
      summary: Your GET endpoint
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: get-me
      description: Get current user profile
    put:
      summary: ''
      tags:
        - user
      operationId: update-me
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      description: Update current user profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateDTO'
    delete:
      summary: ''
      tags:
        - user
      operationId: delete-me
      responses:
        '204':
          description: Non-Authoritative Information
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      description: Delete current user profile
  '/api/users/{userId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-user-by-id
      description: Get user by id
    put:
      summary: ''
      tags:
        - user
      operationId: update-user-by-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Update user by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateDTO'
    delete:
      summary: ''
      tags:
        - user
      operationId: delete-user-by-id
      responses:
        '204':
          description: Payment Required
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Delete user by id
  '/api/user/{userId}/makeadmin':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    put:
      summary: ''
      tags:
        - user
      operationId: make-user-admin
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Make user admin by id
  /api/worksheets:
    get:
      summary: Your GET endpoint
      tags:
        - worksheet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorksheetDetailsDTO'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-worksheets
      description: Get all worksheets or filter them with status
      parameters:
        - schema:
            enum:
              - TODO
              - IN_PROGRESS
              - DONE
          in: query
          name: status
    post:
      summary: ''
      tags:
        - worksheet
      operationId: create-worksheet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorksheetDetailsDTO'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Create worksheet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorksheetCreationDTO'
  '/api/worksheets/{worksheetId}':
    parameters:
      - schema:
          type: string
        name: worksheetId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - worksheet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorksheetDetailsDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-worksheet-by-id
      description: Get worksheet by id
    put:
      summary: ''
      tags:
        - worksheet
      operationId: update-worksheet-by-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Update worksheet by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorksheetDTO'
    delete:
      summary: ''
      tags:
        - worksheet
      operationId: delete-worksheet-by-id
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Delete worksheet (with flag)
  '/api/worksheets/{worksheetId}/workflows':
    parameters:
      - schema:
          type: string
        name: worksheetId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - worksheet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowDetailsDTO'
      operationId: get-workflows-by-worksheet-id
      description: Get all workflow or filter them with status of worksheet
      parameters:
        - schema:
            type: string
            enum:
              - TODO
              - IN_PROGRESS
              - DONE
          in: query
          name: status
    post:
      summary: ''
      tags:
        - worksheet
      operationId: create-workflows-for-worksheet-by-worksheet-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowDetailsDTO'
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Create workflows for worksheet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowCreationDTO'
  '/api/worksheets/{worksheetId}/workflows/{workflowId}':
    parameters:
      - schema:
          type: string
        name: worksheetId
        in: path
        required: true
      - schema:
          type: string
        name: workflowId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - worksheet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowDetailsDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-workflow-by-id
      description: Get workflow by id
    put:
      summary: ''
      tags:
        - worksheet
      operationId: update-workflow-by-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Update-workflow-by-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkflowDTO'
    delete:
      summary: ''
      operationId: delete-workflow-by-id
      tags:
        - worksheet
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Delete workflow by id
  '/api/worksheets/{worksheetId}/workflows/{workflowId}/order':
    parameters:
      - schema:
          type: string
        name: worksheetId
        in: path
        required: true
      - schema:
          type: string
        name: workflowId
        in: path
        required: true
    put:
      summary: ''
      tags:
        - worksheet
      operationId: order-workflow-by-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Ordering workflow by id (move up or down)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderWorkflowDTO'
  '/api/worksheets/{worksheetId}/workflows/{workflowId}/changestatus':
    parameters:
      - schema:
          type: string
        name: worksheetId
        in: path
        required: true
      - schema:
          type: string
        name: workflowId
        in: path
        required: true
    put:
      summary: ''
      tags:
        - worksheet
      operationId: change-workflow-status
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Start or stop workflow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowStatusChangeDTO'
  '/api/stations/{stationId}/forcelogout':
    parameters:
      - schema:
          type: string
        name: stationId
        in: path
        required: true
    put:
      summary: ''
      tags:
        - station
      operationId: station-force-logout
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Force logout the station
  /api/stations:
    get:
      summary: Your GET endpoint
      tags:
        - station
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDetailsDTO'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-all-stations
      description: Get all stations
    post:
      summary: ''
      tags:
        - station
      operationId: create-station
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationDetailsDTO'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Create station
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StationCreationDTO'
  '/api/stations/{stationId}':
    parameters:
      - schema:
          type: string
        name: stationId
        in: path
        required: true
    get:
      summary: Get station details by id
      tags:
        - station
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationDetailsDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-station-by-id
      description: ''
    put:
      summary: ''
      tags:
        - station
      operationId: update-station-by-id
      responses:
        '200':
          description: OK
      description: Update station by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StationCreationDTO'
    delete:
      summary: ''
      tags:
        - station
      operationId: delete-station-by-id
      responses:
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Delete station by id
  '/api/stations/{stationId}/set':
    parameters:
      - schema:
          type: string
        name: stationId
        in: path
        required: true
    put:
      summary: ''
      tags:
        - station
      operationId: set-station
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Set station to tablet
  '/api/users/{id}/forcelogout':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: ''
      tags:
        - user
      operationId: user-force-logout
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Force logout user
  /api/users/me/logout:
    put:
      summary: ''
      tags:
        - user
      operationId: user-logout
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: User logout
  '/api/stations/{stationId}/workflows':
    parameters:
      - schema:
          type: string
        name: stationId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowDetailsDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-workflows-of-stetion
      description: Get assigned workflows
  '/api/worksheets/{worksheetId}/export':
    parameters:
      - schema:
          type: string
        name: worksheetId
        in: path
        required: true
    get:
      summary: Export worksheet
      tags:
        - worksheet
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: export-worksheet
      description: Export worksheet with details
components:
  schemas:
    PasswordChangeDTO:
      title: PasswordChangeDTO
      type: object
      properties:
        newPassword:
          type: string
        currentPassword:
          type: string
      required:
        - newPassword
    LoginRequestDTO:
      title: LoginRequestDTO
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        stationId:
          type: string
      required:
        - username
        - password
    LoginResponseDTO:
      title: LoginResponseDTO
      type: object
      properties:
        tokens:
          $ref: '#/components/schemas/TokensDTO'
        user:
          $ref: '#/components/schemas/UserDTO'
    TokensDTO:
      title: TokensDTO
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    UserDTO:
      title: UserDTO
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        role:
          type: string
          enum:
            - ADMIN
            - WORKER
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deleted:
          type: boolean
    RefreshTokenDTO:
      title: RefreshTokenDTO
      type: object
      properties:
        refreshToken:
          type: string
        refreshTokenn:
          type: string
    UserRegistrationDTO:
      title: UserRegistrationDTO
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        password:
          type: string
          pattern: '.*(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d].*'
          maxLength: 64
          minLength: 8
        role:
          type: string
          enum:
            - ADMIN
            - WORKER
      required:
        - firstName
        - lastName
        - username
        - password
        - role
    UserUpdateDTO:
      title: UserUpdateDTO
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
    WorksheetCreationDTO:
      title: WorksheetCreationDTO
      type: object
      properties:
        productName:
          type: string
        quantity:
          type: integer
        customer:
          type: string
        orderNumber:
          type: string
        deadline:
          type: string
          format: date-time
        comment:
          type: string
        name:
          type: string
    WorkflowCreationDTO:
      title: WorkflowCreationDTO
      type: object
      properties:
        name:
          type: string
        shiftleadComment:
          type: string
        stationId:
          type: string
    UpdateWorkflowDTO:
      title: UpdateWorkflowDTO
      type: object
      properties:
        name:
          type: string
        shiftLeadComment:
          type: string
        stationId:
          type: string
    OrderWorkflowDTO:
      title: OrderWorkflowDTO
      type: object
      properties:
        direction:
          type: string
          enum:
            - UP
            - DOWN
        directionn:
          type: string
      required:
        - direction
    WorkflowDetailsDTO:
      title: WorkflowDetailsDTO
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        workerId:
          type: string
        stationId:
          type: string
        shiftLeadComment:
          type: string
        startedAt:
          type: string
        stoppedAt:
          type: string
        status:
          type: string
          enum:
            - IN_PROGRESS
            - DONE
            - TODO
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        worksheetId:
          type: string
    UpdateWorksheetDTO:
      title: UpdateWorksheetDTO
      type: object
      properties:
        name:
          type: string
        productName:
          type: string
        quantity:
          type: integer
        customer:
          type: string
        orderNumber:
          type: string
        deadLine:
          type: string
          format: date-time
        comment:
          type: string
    WorksheetDetailsDTO:
      title: WorksheetDetailsDTO
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        productName:
          type: string
        quantity:
          type: integer
        customer:
          type: string
        orderNumber:
          type: string
        deadLine:
          type: string
          format: date-time
        creatorId:
          type: string
        comment:
          type: string
        status:
          type: string
          enum:
            - TODO
            - IN_PROGRESS
            - DONE
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deleted:
          type: boolean
    StationCreationDTO:
      title: StationCreationDTO
      type: object
      properties:
        name:
          type: string
        namee:
          type: string
    WorkflowStatusChangeDTO:
      title: WorkflowStatusChangeDTO
      type: object
      properties:
        toStatus:
          type: string
        toStatuss:
          type: string
    StationDetailsDTO:
      title: StationDetailsDTO
      type: object
      properties:
        id:
          type: string
        set:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        loggedInUserId:
          type: string
        deleted:
          type: boolean
